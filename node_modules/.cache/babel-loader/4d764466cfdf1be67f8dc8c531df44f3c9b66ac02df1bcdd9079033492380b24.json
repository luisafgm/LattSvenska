{"ast":null,"code":"const vocabulario = {\n  verbos: [{\n    palabraSue: \"Äta\",\n    palabraEsp: \"Comer\"\n  }, {\n    palabraSue: \"Dricka\",\n    palabraEsp: \"Beber\"\n  }, {\n    palabraSue: \"Sova\",\n    palabraEsp: \"Dormir\"\n  }, {\n    palabraSue: \"Springa\",\n    palabraEsp: \"Correr\"\n  }, {\n    palabraSue: \"Gå\",\n    palabraEsp: \"Caminar\"\n  }, {\n    palabraSue: \"Skriva\",\n    palabraEsp: \"Escribir\"\n  }, {\n    palabraSue: \"Läsa\",\n    palabraEsp: \"Leer\"\n  }, {\n    palabraSue: \"Tala\",\n    palabraEsp: \"Hablar\"\n  }, {\n    palabraSue: \"Lyssna\",\n    palabraEsp: \"Escuchar\"\n  }, {\n    palabraSue: \"Titta\",\n    palabraEsp: \"Mirar\"\n  }, {\n    palabraSue: \"Köpa\",\n    palabraEsp: \"Comprar\"\n  }, {\n    palabraSue: \"Sälja\",\n    palabraEsp: \"Vender\"\n  }, {\n    palabraSue: \"Vänta\",\n    palabraEsp: \"Esperar\"\n  }, {\n    palabraSue: \"Komma\",\n    palabraEsp: \"Venir\"\n  }, {\n    palabraSue: \"Åka\",\n    palabraEsp: \"Ir (en vehículo)\"\n  }, {\n    palabraSue: \"Köra\",\n    palabraEsp: \"Conducir\"\n  }, {\n    palabraSue: \"Bygga\",\n    palabraEsp: \"Construir\"\n  }, {\n    palabraSue: \"Arbeta\",\n    palabraEsp: \"Trabajar\"\n  }, {\n    palabraSue: \"Höra\",\n    palabraEsp: \"Oír\"\n  }, {\n    palabraSue: \"Mata\",\n    palabraEsp: \"Alimentar\"\n  }, {\n    palabraSue: \"Leva\",\n    palabraEsp: \"Vivir\"\n  }, {\n    palabraSue: \"Bo\",\n    palabraEsp: \"Habitar\"\n  }, {\n    palabraSue: \"Vara\",\n    palabraEsp: \"Ser/Estar\"\n  }, {\n    palabraSue: \"Göra\",\n    palabraEsp: \"Hacer\"\n  }, {\n    palabraSue: \"Älska\",\n    palabraEsp: \"Amar\"\n  }, {\n    palabraSue: \"Hata\",\n    palabraEsp: \"Odiar\"\n  }, {\n    palabraSue: \"Vinna\",\n    palabraEsp: \"Ganar\"\n  }, {\n    palabraSue: \"Förlora\",\n    palabraEsp: \"Perder\"\n  }, {\n    palabraSue: \"Skicka\",\n    palabraEsp: \"Enviar\"\n  }\n  // ... Añade más verbos hasta llegar a 300\n  ],\n  adjetivos: [{\n    palabraSue: \"Glad\",\n    palabraEsp: \"Feliz\"\n  }, {\n    palabraSue: \"Ledsen\",\n    palabraEsp: \"Triste\"\n  }, {\n    palabraSue: \"Snabb\",\n    palabraEsp: \"Rápido\"\n  }, {\n    palabraSue: \"Långsam\",\n    palabraEsp: \"Lento\"\n  }, {\n    palabraSue: \"Stor\",\n    palabraEsp: \"Grande\"\n  }, {\n    palabraSue: \"Liten\",\n    palabraEsp: \"Pequeño\"\n  }, {\n    palabraSue: \"Vacker\",\n    palabraEsp: \"Hermoso\"\n  }, {\n    palabraSue: \"Ful\",\n    palabraEsp: \"Feo\"\n  }, {\n    palabraSue: \"Ung\",\n    palabraEsp: \"Joven\"\n  }, {\n    palabraSue: \"Gammal\",\n    palabraEsp: \"Viejo\"\n  }, {\n    palabraSue: \"Hög\",\n    palabraEsp: \"Alto (objetos)\"\n  }, {\n    palabraSue: \"Låg\",\n    palabraEsp: \"Bajo (objetos)\"\n  }, {\n    palabraSue: \"Kort\",\n    palabraEsp: \"Corto\"\n  }, {\n    palabraSue: \"Lång\",\n    palabraEsp: \"Largo\"\n  }, {\n    palabraSue: \"Tjock\",\n    palabraEsp: \"Gordo\"\n  }, {\n    palabraSue: \"Smal\",\n    palabraEsp: \"Delgado\"\n  }, {\n    palabraSue: \"Varm\",\n    palabraEsp: \"Caliente\"\n  }, {\n    palabraSue: \"Kall\",\n    palabraEsp: \"Frío\"\n  }, {\n    palabraSue: \"Trevlig\",\n    palabraEsp: \"Agradable\"\n  }, {\n    palabraSue: \"Otrevlig\",\n    palabraEsp: \"Desagradable\"\n  }, {\n    palabraSue: \"Rolig\",\n    palabraEsp: \"Divertido\"\n  }, {\n    palabraSue: \"Tråkig\",\n    palabraEsp: \"Aburrido\"\n  }, {\n    palabraSue: \"Rik\",\n    palabraEsp: \"Rico\"\n  }, {\n    palabraSue: \"Fattig\",\n    palabraEsp: \"Pobre\"\n  }, {\n    palabraSue: \"Modig\",\n    palabraEsp: \"Valiente\"\n  }, {\n    palabraSue: \"Feig\",\n    palabraEsp: \"Cobarde\"\n  }, {\n    palabraSue: \"Ny\",\n    palabraEsp: \"Nuevo\"\n  }, {\n    palabraSue: \"Gammaldags\",\n    palabraEsp: \"Anticuado\"\n  }, {\n    palabraSue: \"Ren\",\n    palabraEsp: \"Limpio\"\n  }, {\n    palabraSue: \"Smutsig\",\n    palabraEsp: \"Sucio\"\n  }\n  // ... Añade más adjetivos hasta llegar a 300\n  ],\n  palabrasImportantes: [{\n    palabraSue: \"Hej\",\n    palabraEsp: \"Hola\"\n  }, {\n    palabraSue: \"Tack\",\n    palabraEsp: \"Gracias\"\n  }, {\n    palabraSue: \"Ja\",\n    palabraEsp: \"Sí\"\n  }, {\n    palabraSue: \"Nej\",\n    palabraEsp: \"No\"\n  }, {\n    palabraSue: \"Snälla\",\n    palabraEsp: \"Por favor\"\n  }, {\n    palabraSue: \"Förlåt\",\n    palabraEsp: \"Perdón\"\n  }, {\n    palabraSue: \"Ursäkta\",\n    palabraEsp: \"Disculpe\"\n  }, {\n    palabraSue: \"God morgon\",\n    palabraEsp: \"Buenos días\"\n  }, {\n    palabraSue: \"God natt\",\n    palabraEsp: \"Buenas noches\"\n  }, {\n    palabraSue: \"Adjö\",\n    palabraEsp: \"Adiós\"\n  }, {\n    palabraSue: \"Vänligen\",\n    palabraEsp: \"Amablemente\"\n  }, {\n    palabraSue: \"Varför\",\n    palabraEsp: \"Por qué\"\n  }, {\n    palabraSue: \"Hur\",\n    palabraEsp: \"Cómo\"\n  }, {\n    palabraSue: \"När\",\n    palabraEsp: \"Cuándo\"\n  }, {\n    palabraSue: \"Var\",\n    palabraEsp: \"Dónde\"\n  }, {\n    palabraSue: \"Vad\",\n    palabraEsp: \"Qué\"\n  }, {\n    palabraSue: \"Vem\",\n    palabraEsp: \"Quién\"\n  }, {\n    palabraSue: \"Vilken\",\n    palabraEsp: \"Cuál\"\n  }, {\n    palabraSue: \"Och\",\n    palabraEsp: \"Y\"\n  }, {\n    palabraSue: \"Eller\",\n    palabraEsp: \"O\"\n  }, {\n    palabraSue: \"Men\",\n    palabraEsp: \"Pero\"\n  }, {\n    palabraSue: \"Så\",\n    palabraEsp: \"Entonces\"\n  }, {\n    palabraSue: \"Här\",\n    palabraEsp: \"Aquí\"\n  }, {\n    palabraSue: \"Där\",\n    palabraEsp: \"Allí\"\n  }, {\n    palabraSue: \"Alltid\",\n    palabraEsp: \"Siempre\"\n  }, {\n    palabraSue: \"Aldrig\",\n    palabraEsp: \"Nunca\"\n  }, {\n    palabraSue: \"Kanske\",\n    palabraEsp: \"Quizás\"\n  }, {\n    palabraSue: \"Redan\",\n    palabraEsp: \"Ya\"\n  }, {\n    palabraSue: \"Ofta\",\n    palabraEsp: \"A menudo\"\n  }, {\n    palabraSue: \"Sällan\",\n    palabraEsp: \"Rara vez\"\n  }\n  // ... Añade más palabras importantes hasta llegar a 300\n  ]\n};\n\n// Función para obtener palabras según la categoría\n// src/services/vocabularioService.js\nconst obtenerPalabras = async categoria => {\n  try {\n    // Aquí puedes reemplazar con una API real o un archivo JSON\n    const response = await fetch(`https://api.ejemplo.com/palabras/${categoria}`);\n    const data = await response.json();\n    return data; // Esto devolvería todas las palabras sin límites\n  } catch (error) {\n    console.error(\"Error al obtener las palabras:\", error);\n    return []; // En caso de error, devuelve un array vacío\n  }\n};\nexport default obtenerPalabras;","map":{"version":3,"names":["vocabulario","verbos","palabraSue","palabraEsp","adjetivos","palabrasImportantes","obtenerPalabras","categoria","response","fetch","data","json","error","console"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/services/vocabularioService.js"],"sourcesContent":["const vocabulario = {\n  verbos: [\n        { palabraSue: \"Äta\", palabraEsp: \"Comer\" },\n        { palabraSue: \"Dricka\", palabraEsp: \"Beber\" },\n        { palabraSue: \"Sova\", palabraEsp: \"Dormir\" },\n        { palabraSue: \"Springa\", palabraEsp: \"Correr\" },\n        { palabraSue: \"Gå\", palabraEsp: \"Caminar\" },\n        { palabraSue: \"Skriva\", palabraEsp: \"Escribir\" },\n        { palabraSue: \"Läsa\", palabraEsp: \"Leer\" },\n        { palabraSue: \"Tala\", palabraEsp: \"Hablar\" },\n        { palabraSue: \"Lyssna\", palabraEsp: \"Escuchar\" },\n        { palabraSue: \"Titta\", palabraEsp: \"Mirar\" },\n        { palabraSue: \"Köpa\", palabraEsp: \"Comprar\" },\n        { palabraSue: \"Sälja\", palabraEsp: \"Vender\" },\n        { palabraSue: \"Vänta\", palabraEsp: \"Esperar\" },\n        { palabraSue: \"Komma\", palabraEsp: \"Venir\" },\n        { palabraSue: \"Åka\", palabraEsp: \"Ir (en vehículo)\" },\n        { palabraSue: \"Köra\", palabraEsp: \"Conducir\" },\n        { palabraSue: \"Bygga\", palabraEsp: \"Construir\" },\n        { palabraSue: \"Arbeta\", palabraEsp: \"Trabajar\" },\n        { palabraSue: \"Höra\", palabraEsp: \"Oír\" },\n        { palabraSue: \"Mata\", palabraEsp: \"Alimentar\" },\n        { palabraSue: \"Leva\", palabraEsp: \"Vivir\" },\n        { palabraSue: \"Bo\", palabraEsp: \"Habitar\" },\n        { palabraSue: \"Vara\", palabraEsp: \"Ser/Estar\" },\n        { palabraSue: \"Göra\", palabraEsp: \"Hacer\" },\n        { palabraSue: \"Älska\", palabraEsp: \"Amar\" },\n        { palabraSue: \"Hata\", palabraEsp: \"Odiar\" },\n        { palabraSue: \"Vinna\", palabraEsp: \"Ganar\" },\n        { palabraSue: \"Förlora\", palabraEsp: \"Perder\" },\n        { palabraSue: \"Skicka\", palabraEsp: \"Enviar\" },\n        // ... Añade más verbos hasta llegar a 300\n    \n      \n  ],\n  adjetivos: [\n        { palabraSue: \"Glad\", palabraEsp: \"Feliz\" },\n        { palabraSue: \"Ledsen\", palabraEsp: \"Triste\" },\n        { palabraSue: \"Snabb\", palabraEsp: \"Rápido\" },\n        { palabraSue: \"Långsam\", palabraEsp: \"Lento\" },\n        { palabraSue: \"Stor\", palabraEsp: \"Grande\" },\n        { palabraSue: \"Liten\", palabraEsp: \"Pequeño\" },\n        { palabraSue: \"Vacker\", palabraEsp: \"Hermoso\" },\n        { palabraSue: \"Ful\", palabraEsp: \"Feo\" },\n        { palabraSue: \"Ung\", palabraEsp: \"Joven\" },\n        { palabraSue: \"Gammal\", palabraEsp: \"Viejo\" },\n        { palabraSue: \"Hög\", palabraEsp: \"Alto (objetos)\" },\n        { palabraSue: \"Låg\", palabraEsp: \"Bajo (objetos)\" },\n        { palabraSue: \"Kort\", palabraEsp: \"Corto\" },\n        { palabraSue: \"Lång\", palabraEsp: \"Largo\" },\n        { palabraSue: \"Tjock\", palabraEsp: \"Gordo\" },\n        { palabraSue: \"Smal\", palabraEsp: \"Delgado\" },\n        { palabraSue: \"Varm\", palabraEsp: \"Caliente\" },\n        { palabraSue: \"Kall\", palabraEsp: \"Frío\" },\n        { palabraSue: \"Trevlig\", palabraEsp: \"Agradable\" },\n        { palabraSue: \"Otrevlig\", palabraEsp: \"Desagradable\" },\n        { palabraSue: \"Rolig\", palabraEsp: \"Divertido\" },\n        { palabraSue: \"Tråkig\", palabraEsp: \"Aburrido\" },\n        { palabraSue: \"Rik\", palabraEsp: \"Rico\" },\n        { palabraSue: \"Fattig\", palabraEsp: \"Pobre\" },\n        { palabraSue: \"Modig\", palabraEsp: \"Valiente\" },\n        { palabraSue: \"Feig\", palabraEsp: \"Cobarde\" },\n        { palabraSue: \"Ny\", palabraEsp: \"Nuevo\" },\n        { palabraSue: \"Gammaldags\", palabraEsp: \"Anticuado\" },\n        { palabraSue: \"Ren\", palabraEsp: \"Limpio\" },\n        { palabraSue: \"Smutsig\", palabraEsp: \"Sucio\" },\n        // ... Añade más adjetivos hasta llegar a 300\n            \n  ],\n  palabrasImportantes: [\n        { palabraSue: \"Hej\", palabraEsp: \"Hola\" },\n        { palabraSue: \"Tack\", palabraEsp: \"Gracias\" },\n        { palabraSue: \"Ja\", palabraEsp: \"Sí\" },\n        { palabraSue: \"Nej\", palabraEsp: \"No\" },\n        { palabraSue: \"Snälla\", palabraEsp: \"Por favor\" },\n        { palabraSue: \"Förlåt\", palabraEsp: \"Perdón\" },\n        { palabraSue: \"Ursäkta\", palabraEsp: \"Disculpe\" },\n        { palabraSue: \"God morgon\", palabraEsp: \"Buenos días\" },\n        { palabraSue: \"God natt\", palabraEsp: \"Buenas noches\" },\n        { palabraSue: \"Adjö\", palabraEsp: \"Adiós\" },\n        { palabraSue: \"Vänligen\", palabraEsp: \"Amablemente\" },\n        { palabraSue: \"Varför\", palabraEsp: \"Por qué\" },\n        { palabraSue: \"Hur\", palabraEsp: \"Cómo\" },\n        { palabraSue: \"När\", palabraEsp: \"Cuándo\" },\n        { palabraSue: \"Var\", palabraEsp: \"Dónde\" },\n        { palabraSue: \"Vad\", palabraEsp: \"Qué\" },\n        { palabraSue: \"Vem\", palabraEsp: \"Quién\" },\n        { palabraSue: \"Vilken\", palabraEsp: \"Cuál\" },\n        { palabraSue: \"Och\", palabraEsp: \"Y\" },\n        { palabraSue: \"Eller\", palabraEsp: \"O\" },\n        { palabraSue: \"Men\", palabraEsp: \"Pero\" },\n        { palabraSue: \"Så\", palabraEsp: \"Entonces\" },\n        { palabraSue: \"Här\", palabraEsp: \"Aquí\" },\n        { palabraSue: \"Där\", palabraEsp: \"Allí\" },\n        { palabraSue: \"Alltid\", palabraEsp: \"Siempre\" },\n        { palabraSue: \"Aldrig\", palabraEsp: \"Nunca\" },\n        { palabraSue: \"Kanske\", palabraEsp: \"Quizás\" },\n        { palabraSue: \"Redan\", palabraEsp: \"Ya\" },\n        { palabraSue: \"Ofta\", palabraEsp: \"A menudo\" },\n        { palabraSue: \"Sällan\", palabraEsp: \"Rara vez\" },\n        // ... Añade más palabras importantes hasta llegar a 300\n      ]\n      \n};\n\n// Función para obtener palabras según la categoría\n// src/services/vocabularioService.js\nconst obtenerPalabras = async (categoria) => {\n    try {\n      // Aquí puedes reemplazar con una API real o un archivo JSON\n      const response = await fetch(`https://api.ejemplo.com/palabras/${categoria}`);\n      const data = await response.json();\n      return data; // Esto devolvería todas las palabras sin límites\n    } catch (error) {\n      console.error(\"Error al obtener las palabras:\", error);\n      return []; // En caso de error, devuelve un array vacío\n    }\n  };\n  \n  export default obtenerPalabras;\n  \n"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAClBC,MAAM,EAAE,CACF;IAAEC,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC1C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC7C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC5C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC/C;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC3C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAW,CAAC,EAChD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC1C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC5C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAW,CAAC,EAChD;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC5C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC7C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC7C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC9C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC5C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAmB,CAAC,EACrD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAW,CAAC,EAC9C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAY,CAAC,EAChD;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAW,CAAC,EAChD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAM,CAAC,EACzC;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAY,CAAC,EAC/C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC3C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAY,CAAC,EAC/C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC3C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC5C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC/C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS;EAC7C;EAAA,CAGL;EACDC,SAAS,EAAE,CACL;IAAEF,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC7C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC9C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC5C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC9C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC/C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAM,CAAC,EACxC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC1C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC7C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAiB,CAAC,EACnD;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAiB,CAAC,EACnD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC5C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC7C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAW,CAAC,EAC9C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC1C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAY,CAAC,EAClD;IAAED,UAAU,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAe,CAAC,EACtD;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAY,CAAC,EAChD;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAW,CAAC,EAChD;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC7C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAW,CAAC,EAC/C;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC7C;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAQ,CAAC,EACzC;IAAED,UAAU,EAAE,YAAY;IAAEC,UAAU,EAAE;EAAY,CAAC,EACrD;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC3C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAQ;EAC7C;EAAA,CAEL;EACDE,mBAAmB,EAAE,CACf;IAAEH,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC7C;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAK,CAAC,EACtC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAK,CAAC,EACvC;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAY,CAAC,EACjD;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAW,CAAC,EACjD;IAAED,UAAU,EAAE,YAAY;IAAEC,UAAU,EAAE;EAAc,CAAC,EACvD;IAAED,UAAU,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAgB,CAAC,EACvD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC3C;IAAED,UAAU,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAc,CAAC,EACrD;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC/C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC3C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC1C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAM,CAAC,EACxC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC1C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC5C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAI,CAAC,EACtC;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAI,CAAC,EACxC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAW,CAAC,EAC5C;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC,EACzC;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC/C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC7C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAK,CAAC,EACzC;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAW,CAAC,EAC9C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAW;EAC/C;EAAA;AAGR,CAAC;;AAED;AACA;AACA,MAAMG,eAAe,GAAG,MAAOC,SAAS,IAAK;EACzC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCF,SAAS,EAAE,CAAC;IAC7E,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC;AAED,eAAeN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}