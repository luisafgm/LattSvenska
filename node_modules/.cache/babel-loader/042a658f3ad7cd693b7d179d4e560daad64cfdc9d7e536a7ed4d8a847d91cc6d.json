{"ast":null,"code":"var _jsxFileName = \"/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js\",\n  _s = $RefreshSig$();\n// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Importa el servicio\nimport Tarjeta from \"./Tarjeta\";\nimport \"./vocabulario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocabulario() {\n  _s();\n  const [palabras, setPalabras] = useState({\n    verbos: [],\n    adjetivos: [],\n    en_ett: [],\n    otros: []\n  });\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras();\n      // Asegurarse de que el objeto contiene arrays vacíos si las categorías están vacías\n      setPalabras(nuevasPalabras || {\n        verbos: [],\n        adjetivos: [],\n        en_ett: [],\n        otros: []\n      });\n    };\n    cargarPalabras();\n  }, []);\n  const renderCategoria = (categoria, nombre) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"palabras-columnas\",\n        children: Array.isArray(categoria) && categoria.length > 0 ? categoria.map((palabra, index) => /*#__PURE__*/_jsxDEV(Tarjeta, {\n          palabraEsp: palabra.espanol,\n          palabraSue: palabra.sueco\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No hay \", nombre.toLowerCase(), \" disponibles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulario-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Vocabulario por Categor\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), renderCategoria(palabras.verbos, \"Verbos\"), renderCategoria(palabras.adjetivos, \"Adjetivos\"), renderCategoria(palabras.en_ett, \"Palabras en 'En' o 'Ett'\"), renderCategoria(palabras.otros, \"Otros\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocabulario, \"BAHtyRmHCXtJuncvTOvZ/kB1Mns=\");\n_c = Vocabulario;\nexport default Vocabulario;\nvar _c;\n$RefreshReg$(_c, \"Vocabulario\");","map":{"version":3,"names":["React","useState","useEffect","obtenerPalabras","Tarjeta","jsxDEV","_jsxDEV","Vocabulario","_s","palabras","setPalabras","verbos","adjetivos","en_ett","otros","cargarPalabras","nuevasPalabras","renderCategoria","categoria","nombre","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","palabra","index","palabraEsp","espanol","palabraSue","sueco","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport obtenerPalabras from \"../services/vocabularioService\";  // Importa el servicio\nimport Tarjeta from \"./Tarjeta\";\nimport \"./vocabulario.css\";\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState({\n    verbos: [],\n    adjetivos: [],\n    en_ett: [],\n    otros: []\n  });\n\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras();\n      // Asegurarse de que el objeto contiene arrays vacíos si las categorías están vacías\n      setPalabras(nuevasPalabras || { verbos: [], adjetivos: [], en_ett: [], otros: [] });\n    };\n    cargarPalabras();\n  }, []);\n\n  const renderCategoria = (categoria, nombre) => {\n    return (\n      <div className=\"categoria\">\n        <h4>{nombre}</h4>\n        <div className=\"palabras-columnas\">\n          {Array.isArray(categoria) && categoria.length > 0 ? (\n            categoria.map((palabra, index) => (\n              <Tarjeta key={index} palabraEsp={palabra.espanol} palabraSue={palabra.sueco} />\n            ))\n          ) : (\n            <p>No hay {nombre.toLowerCase()} disponibles</p>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"vocabulario-container\">\n      <h3>Vocabulario por Categoría</h3>\n\n      {renderCategoria(palabras.verbos, \"Verbos\")}\n      {renderCategoria(palabras.adjetivos, \"Adjetivos\")}\n      {renderCategoria(palabras.en_ett, \"Palabras en 'En' o 'Ett'\")}\n      {renderCategoria(palabras.otros, \"Otros\")}\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,gCAAgC,CAAC,CAAE;AAC/D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,cAAc,GAAG,MAAMb,eAAe,CAAC,CAAC;MAC9C;MACAO,WAAW,CAACM,cAAc,IAAI;QAAEL,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC;IACrF,CAAC;IACDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;IAC7C,oBACEb,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBf,OAAA;QAAAe,QAAA,EAAKF;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjBnB,OAAA;QAAKc,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BK,KAAK,CAACC,OAAO,CAACT,SAAS,CAAC,IAAIA,SAAS,CAACU,MAAM,GAAG,CAAC,GAC/CV,SAAS,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BzB,OAAA,CAACF,OAAO;UAAa4B,UAAU,EAAEF,OAAO,CAACG,OAAQ;UAACC,UAAU,EAAEJ,OAAO,CAACK;QAAM,GAA9DJ,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2D,CAC/E,CAAC,gBAEFnB,OAAA;UAAAe,QAAA,GAAG,SAAO,EAACF,MAAM,CAACiB,WAAW,CAAC,CAAC,EAAC,cAAY;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAChD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,oBACEnB,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAAe,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjCR,eAAe,CAACR,QAAQ,CAACE,MAAM,EAAE,QAAQ,CAAC,EAC1CM,eAAe,CAACR,QAAQ,CAACG,SAAS,EAAE,WAAW,CAAC,EAChDK,eAAe,CAACR,QAAQ,CAACI,MAAM,EAAE,0BAA0B,CAAC,EAC5DI,eAAe,CAACR,QAAQ,CAACK,KAAK,EAAE,OAAO,CAAC;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAACjB,EAAA,CA5CQD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}