{"ast":null,"code":"const vocabulario = {\n  verbos: [{\n    palabraEsp: \"Comer\",\n    palabraSue: \"Äta\"\n  }, {\n    palabraEsp: \"Beber\",\n    palabraSue: \"Dricka\"\n  }, {\n    palabraEsp: \"Correr\",\n    palabraSue: \"Springa\"\n  }, {\n    palabraEsp: \"Escribir\",\n    palabraSue: \"Skriva\"\n  }, {\n    palabraEsp: \"Leer\",\n    palabraSue: \"Läsa\"\n  }],\n  adjetivos: [{\n    palabraEsp: \"Rápido\",\n    palabraSue: \"Snabb\"\n  }, {\n    palabraEsp: \"Lento\",\n    palabraSue: \"Långsam\"\n  }, {\n    palabraEsp: \"Feliz\",\n    palabraSue: \"Glad\"\n  }, {\n    palabraEsp: \"Triste\",\n    palabraSue: \"Ledsen\"\n  }, {\n    palabraEsp: \"Grande\",\n    palabraSue: \"Stor\"\n  }],\n  palabrasImportantes: [{\n    palabraEsp: \"Hola\",\n    palabraSue: \"Hej\"\n  }, {\n    palabraEsp: \"Gracias\",\n    palabraSue: \"Tack\"\n  }, {\n    palabraEsp: \"Sí\",\n    palabraSue: \"Ja\"\n  }, {\n    palabraEsp: \"No\",\n    palabraSue: \"Nej\"\n  }, {\n    palabraEsp: \"Por favor\",\n    palabraSue: \"Snälla\"\n  }]\n};\n\n// Función para obtener palabras según la categoría\nconst obtenerPalabras = async categoria => {\n  try {\n    // Simulación de llamada a una API con un pequeño retraso\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(vocabulario[categoria] || []);\n      }, 500); // 0.5 segundos de retraso para simular la carga\n    });\n  } catch (error) {\n    console.error(\"Error al obtener palabras:\", error);\n    throw error;\n  }\n};\nexport default obtenerPalabras;","map":{"version":3,"names":["vocabulario","verbos","palabraEsp","palabraSue","adjetivos","palabrasImportantes","obtenerPalabras","categoria","Promise","resolve","setTimeout","error","console"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/services/vocabularioService.js"],"sourcesContent":["const vocabulario = {\n    verbos: [\n      { palabraEsp: \"Comer\", palabraSue: \"Äta\" },\n      { palabraEsp: \"Beber\", palabraSue: \"Dricka\" },\n      { palabraEsp: \"Correr\", palabraSue: \"Springa\" },\n      { palabraEsp: \"Escribir\", palabraSue: \"Skriva\" },\n      { palabraEsp: \"Leer\", palabraSue: \"Läsa\" }\n    ],\n    adjetivos: [\n      { palabraEsp: \"Rápido\", palabraSue: \"Snabb\" },\n      { palabraEsp: \"Lento\", palabraSue: \"Långsam\" },\n      { palabraEsp: \"Feliz\", palabraSue: \"Glad\" },\n      { palabraEsp: \"Triste\", palabraSue: \"Ledsen\" },\n      { palabraEsp: \"Grande\", palabraSue: \"Stor\" }\n    ],\n    palabrasImportantes: [\n      { palabraEsp: \"Hola\", palabraSue: \"Hej\" },\n      { palabraEsp: \"Gracias\", palabraSue: \"Tack\" },\n      { palabraEsp: \"Sí\", palabraSue: \"Ja\" },\n      { palabraEsp: \"No\", palabraSue: \"Nej\" },\n      { palabraEsp: \"Por favor\", palabraSue: \"Snälla\" }\n    ]\n  };\n  \n  // Función para obtener palabras según la categoría\n  const obtenerPalabras = async (categoria) => {\n    try {\n      // Simulación de llamada a una API con un pequeño retraso\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(vocabulario[categoria] || []);\n        }, 500); // 0.5 segundos de retraso para simular la carga\n      });\n    } catch (error) {\n      console.error(\"Error al obtener palabras:\", error);\n      throw error;\n    }\n  };\n  \n  export default obtenerPalabras;\n  "],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,MAAM,EAAE,CACN;IAAEC,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAM,CAAC,EAC1C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC7C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC/C;IAAED,UAAU,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAS,CAAC,EAChD;IAAED,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAO,CAAC,CAC3C;EACDC,SAAS,EAAE,CACT;IAAEF,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EAC7C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAU,CAAC,EAC9C;IAAED,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC3C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC9C;IAAED,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAO,CAAC,CAC7C;EACDE,mBAAmB,EAAE,CACnB;IAAEH,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAM,CAAC,EACzC;IAAED,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAO,CAAC,EAC7C;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAK,CAAC,EACtC;IAAED,UAAU,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAM,CAAC,EACvC;IAAED,UAAU,EAAE,WAAW;IAAEC,UAAU,EAAE;EAAS,CAAC;AAErD,CAAC;;AAED;AACA,MAAMG,eAAe,GAAG,MAAOC,SAAS,IAAK;EAC3C,IAAI;IACF;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfD,OAAO,CAACT,WAAW,CAACO,SAAS,CAAC,IAAI,EAAE,CAAC;MACvC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}