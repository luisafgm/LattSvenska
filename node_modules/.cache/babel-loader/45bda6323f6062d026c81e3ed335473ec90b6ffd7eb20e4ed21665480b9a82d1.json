{"ast":null,"code":"var _jsxFileName = \"/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tarjeta from \"./Tarjeta\"; // Componente para mostrar las tarjetas\nimport \"./vocabulario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocabulario() {\n  _s();\n  const [palabras, setPalabras] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Este es el endpoint de ejemplo de la API que nos dará las palabras\n  const API_URL = \"https://api.ejemplo.com/vocabulario-sueco\"; // Sustituye esto por la URL de la API que estés usando\n\n  // Obtener las palabras de la API\n  useEffect(() => {\n    axios.get(API_URL).then(response => {\n      // Suponemos que la respuesta tiene un array de palabras en sueco y español\n      setPalabras(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error al obtener las palabras:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando palabras...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulario-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vocabulario en Sueco\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tarjetas-container\",\n      children: palabras.map((item, index) => /*#__PURE__*/_jsxDEV(Tarjeta, {\n        palabraEsp: item.palabraEsp,\n        palabraSue: item.palabraSue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocabulario, \"ojV3MiqAUYIdx8CUQQmqw5iDgVQ=\");\n_c = Vocabulario;\nexport default Vocabulario;\nvar _c;\n$RefreshReg$(_c, \"Vocabulario\");","map":{"version":3,"names":["React","useState","useEffect","axios","Tarjeta","jsxDEV","_jsxDEV","Vocabulario","_s","palabras","setPalabras","loading","setLoading","API_URL","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","index","palabraEsp","palabraSue","_c","$RefreshReg$"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tarjeta from \"./Tarjeta\"; // Componente para mostrar las tarjetas\nimport \"./vocabulario.css\";\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Este es el endpoint de ejemplo de la API que nos dará las palabras\n  const API_URL = \"https://api.ejemplo.com/vocabulario-sueco\"; // Sustituye esto por la URL de la API que estés usando\n\n  // Obtener las palabras de la API\n  useEffect(() => {\n    axios\n      .get(API_URL)\n      .then((response) => {\n        // Suponemos que la respuesta tiene un array de palabras en sueco y español\n        setPalabras(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error al obtener las palabras:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <p>Cargando palabras...</p>;\n  }\n\n  return (\n    <div className=\"vocabulario-container\">\n      <h2>Vocabulario en Sueco</h2>\n      <div className=\"tarjetas-container\">\n        {palabras.map((item, index) => (\n          <Tarjeta\n            key={index}\n            palabraEsp={item.palabraEsp}\n            palabraSue={item.palabraSue}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMY,OAAO,GAAG,2CAA2C,CAAC,CAAC;;EAE7D;EACAX,SAAS,CAAC,MAAM;IACdC,KAAK,CACFW,GAAG,CAACD,OAAO,CAAC,CACZE,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAAC;MAC1BL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAL,QAAA,gBACpCf,OAAA;MAAAe,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BnB,OAAA;MAAKoB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,EAChCZ,QAAQ,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBvB,OAAA,CAACF,OAAO;QAEN0B,UAAU,EAAEF,IAAI,CAACE,UAAW;QAC5BC,UAAU,EAAEH,IAAI,CAACG;MAAW,GAFvBF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAxCQD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}