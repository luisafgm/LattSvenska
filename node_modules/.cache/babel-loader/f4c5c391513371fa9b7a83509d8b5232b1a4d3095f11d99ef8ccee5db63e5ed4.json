{"ast":null,"code":"// src/services/vocabularioService.js\nimport axios from \"axios\";\n\n// Simulación de un servicio de palabras con sus traducciones\nconst obtenerPalabras = async () => {\n  try {\n    // Datos simulados con palabras en sueco y su traducción al español\n    const palabras = [{\n      sueco: \"Hej\",\n      espanol: \"Hola\",\n      categoria: \"saludos\"\n    }, {\n      sueco: \"Tack\",\n      espanol: \"Gracias\",\n      categoria: \"cortesía\"\n    }, {\n      sueco: \"Adjö\",\n      espanol: \"Adiós\",\n      categoria: \"despedidas\"\n    }, {\n      sueco: \"Springa\",\n      espanol: \"Correr\",\n      categoria: \"verbos\"\n    }, {\n      sueco: \"Snabb\",\n      espanol: \"Rápido\",\n      categoria: \"adjetivos\"\n    }, {\n      sueco: \"Lång\",\n      espanol: \"Largo\",\n      categoria: \"adjetivos\"\n    }, {\n      sueco: \"En bok\",\n      espanol: \"Un libro\",\n      categoria: \"en_ett\"\n    }, {\n      sueco: \"Ett bord\",\n      espanol: \"Una mesa\",\n      categoria: \"en_ett\"\n    }];\n\n    // Clasificamos las palabras por categoría\n    const palabrasPorCategoria = {\n      verbos: palabras.filter(p => p.categoria === \"verbos\"),\n      adjetivos: palabras.filter(p => p.categoria === \"adjetivos\"),\n      en_ett: palabras.filter(p => p.categoria === \"en_ett\"),\n      otros: palabras.filter(p => p.categoria !== \"verbos\" && p.categoria !== \"adjetivos\" && p.categoria !== \"en_ett\")\n    };\n    return palabrasPorCategoria;\n  } catch (error) {\n    console.error(\"Error al obtener palabras:\", error);\n    return {\n      verbos: [],\n      adjetivos: [],\n      en_ett: [],\n      otros: []\n    };\n  }\n};\nexport default obtenerPalabras;","map":{"version":3,"names":["axios","obtenerPalabras","palabras","sueco","espanol","categoria","palabrasPorCategoria","verbos","filter","p","adjetivos","en_ett","otros","error","console"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/services/vocabularioService.js"],"sourcesContent":["// src/services/vocabularioService.js\nimport axios from \"axios\";\n\n// Simulación de un servicio de palabras con sus traducciones\nconst obtenerPalabras = async () => {\n  try {\n    // Datos simulados con palabras en sueco y su traducción al español\n    const palabras = [\n      { sueco: \"Hej\", espanol: \"Hola\", categoria: \"saludos\" },\n      { sueco: \"Tack\", espanol: \"Gracias\", categoria: \"cortesía\" },\n      { sueco: \"Adjö\", espanol: \"Adiós\", categoria: \"despedidas\" },\n      { sueco: \"Springa\", espanol: \"Correr\", categoria: \"verbos\" },\n      { sueco: \"Snabb\", espanol: \"Rápido\", categoria: \"adjetivos\" },\n      { sueco: \"Lång\", espanol: \"Largo\", categoria: \"adjetivos\" },\n      { sueco: \"En bok\", espanol: \"Un libro\", categoria: \"en_ett\" },\n      { sueco: \"Ett bord\", espanol: \"Una mesa\", categoria: \"en_ett\" },\n    ];\n\n    // Clasificamos las palabras por categoría\n    const palabrasPorCategoria = {\n      verbos: palabras.filter((p) => p.categoria === \"verbos\"),\n      adjetivos: palabras.filter((p) => p.categoria === \"adjetivos\"),\n      en_ett: palabras.filter((p) => p.categoria === \"en_ett\"),\n      otros: palabras.filter(\n        (p) => p.categoria !== \"verbos\" && p.categoria !== \"adjetivos\" && p.categoria !== \"en_ett\"\n      ),\n    };\n\n    return palabrasPorCategoria;\n  } catch (error) {\n    console.error(\"Error al obtener palabras:\", error);\n    return {\n      verbos: [],\n      adjetivos: [],\n      en_ett: [],\n      otros: [],\n    };\n  }\n};\n\nexport default obtenerPalabras;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,CACf;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAU,CAAC,EACvD;MAAEF,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAW,CAAC,EAC5D;MAAEF,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAa,CAAC,EAC5D;MAAEF,KAAK,EAAE,SAAS;MAAEC,OAAO,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAS,CAAC,EAC5D;MAAEF,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAY,CAAC,EAC7D;MAAEF,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAY,CAAC,EAC3D;MAAEF,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAS,CAAC,EAC7D;MAAEF,KAAK,EAAE,UAAU;MAAEC,OAAO,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAS,CAAC,CAChE;;IAED;IACA,MAAMC,oBAAoB,GAAG;MAC3BC,MAAM,EAAEL,QAAQ,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAK,QAAQ,CAAC;MACxDK,SAAS,EAAER,QAAQ,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAK,WAAW,CAAC;MAC9DM,MAAM,EAAET,QAAQ,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAK,QAAQ,CAAC;MACxDO,KAAK,EAAEV,QAAQ,CAACM,MAAM,CACnBC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAK,QAAQ,IAAII,CAAC,CAACJ,SAAS,KAAK,WAAW,IAAII,CAAC,CAACJ,SAAS,KAAK,QACpF;IACF,CAAC;IAED,OAAOC,oBAAoB;EAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO;MACLN,MAAM,EAAE,EAAE;MACVG,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT,CAAC;EACH;AACF,CAAC;AAED,eAAeX,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}