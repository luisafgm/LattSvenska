{"ast":null,"code":"var _jsxFileName = \"/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js\",\n  _s = $RefreshSig$();\n// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Importamos el servicio\nimport \"./vocabulario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocabulario() {\n  _s();\n  const [palabras, setPalabras] = useState([]);\n  const [categoria, setCategoria] = useState(\"vocabulario\");\n  const COLUMNAS = 4;\n  // Cargar las palabras de forma automática al montar el componente\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras();\n      setPalabras(nuevasPalabras);\n    };\n    cargarPalabras();\n  }, []);\n\n  // Función para manejar la categoría (puedes expandirlo según necesites)\n  const renderCategoria = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Palabras Aleatorias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), palabras.map((item, index) => /*#__PURE__*/_jsxDEV(Tarjeta, {\n        palabraEsp: item // Si se está usando un API que devuelve solo palabras, puedes adaptarlo.\n        ,\n        palabraSue: item // Aquí deberías buscar la traducción al sueco\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulario-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategoria(\"vocabulario\"),\n        children: \"Vocabulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderCategoria()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocabulario, \"52443mtIZA8DEccGQOeBDzqGiBQ=\");\n_c = Vocabulario;\nexport default Vocabulario;\nvar _c;\n$RefreshReg$(_c, \"Vocabulario\");","map":{"version":3,"names":["React","useState","useEffect","Tarjeta","obtenerPalabras","jsxDEV","_jsxDEV","Vocabulario","_s","palabras","setPalabras","categoria","setCategoria","COLUMNAS","cargarPalabras","nuevasPalabras","renderCategoria","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","palabraEsp","palabraSue","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Importamos el servicio\nimport \"./vocabulario.css\";\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState([]);\n  const [categoria, setCategoria] = useState(\"vocabulario\");\n\n  const COLUMNAS = 4;\n  // Cargar las palabras de forma automática al montar el componente\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras();\n      setPalabras(nuevasPalabras);\n    };\n    cargarPalabras();\n  }, []);\n\n  // Función para manejar la categoría (puedes expandirlo según necesites)\n  const renderCategoria = () => {\n    return (\n      <div>\n        <h3>Palabras Aleatorias</h3>\n        {palabras.map((item, index) => (\n          <Tarjeta\n            key={index}\n            palabraEsp={item}  // Si se está usando un API que devuelve solo palabras, puedes adaptarlo.\n            palabraSue={item}  // Aquí deberías buscar la traducción al sueco\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"vocabulario-container\">\n      <nav>\n        <button onClick={() => setCategoria(\"vocabulario\")}>Vocabulario</button>\n      </nav>\n      {renderCategoria()}\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,gCAAgC,CAAC,CAAC;AAC9D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,aAAa,CAAC;EAEzD,MAAMY,QAAQ,GAAG,CAAC;EAClB;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,cAAc,GAAG,MAAMX,eAAe,CAAC,CAAC;MAC9CM,WAAW,CAACK,cAAc,CAAC;IAC7B,CAAC;IACDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,oBACEV,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BZ,QAAQ,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBlB,OAAA,CAACH,OAAO;QAENsB,UAAU,EAAEF,IAAK,CAAE;QAAA;QACnBG,UAAU,EAAEH,IAAK,CAAE;MAAA,GAFdC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACEf,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAV,QAAA,gBACpCX,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,aAAa,CAAE;QAAAK,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,EACLL,eAAe,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACb,EAAA,CAtCQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}