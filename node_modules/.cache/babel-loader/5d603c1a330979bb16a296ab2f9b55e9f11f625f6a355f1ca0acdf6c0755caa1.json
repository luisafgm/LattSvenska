{"ast":null,"code":"var _jsxFileName = \"/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js\",\n  _s = $RefreshSig$();\n// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerVocabulario from \"../api\"; // Importamos la función de la API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocabulario() {\n  _s();\n  const [palabras, setPalabras] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const categorias = [\"verbo\", \"adjetivo\", \"sustantivo\"];\n\n  // Función para obtener 10 palabras aleatorias (puedes adaptarla para obtener más)\n  const cargarVocabulario = async () => {\n    setLoading(true);\n    const palabrasNuevas = [];\n    for (let i = 0; i < 10; i++) {\n      // Aquí puedes cambiar las palabras manualmente o usar una API para obtener palabras aleatorias\n      const palabraAleatoria = `palabra${i + 1}`;\n      const traduccionSueco = await obtenerVocabulario(palabraAleatoria, \"es\", \"sv\"); // Traducir al sueco\n      palabrasNuevas.push({\n        palabraEsp: palabraAleatoria,\n        palabraSue: traduccionSueco\n      });\n    }\n    setPalabras(palabrasNuevas);\n    setLoading(false);\n  };\n  useEffect(() => {\n    cargarVocabulario();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vocabulario Sueco-Espa\\xF1ol\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : palabras.map((item, index) => /*#__PURE__*/_jsxDEV(Tarjeta, {\n      palabraEsp: item.palabraEsp,\n      palabraSue: item.palabraSue\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocabulario, \"ojV3MiqAUYIdx8CUQQmqw5iDgVQ=\");\n_c = Vocabulario;\nexport default Vocabulario;\nvar _c;\n$RefreshReg$(_c, \"Vocabulario\");","map":{"version":3,"names":["React","useState","useEffect","Tarjeta","obtenerVocabulario","jsxDEV","_jsxDEV","Vocabulario","_s","palabras","setPalabras","loading","setLoading","categorias","cargarVocabulario","palabrasNuevas","i","palabraAleatoria","traduccionSueco","push","palabraEsp","palabraSue","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerVocabulario from \"../api\"; // Importamos la función de la API\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const categorias = [\"verbo\", \"adjetivo\", \"sustantivo\"];\n\n  // Función para obtener 10 palabras aleatorias (puedes adaptarla para obtener más)\n  const cargarVocabulario = async () => {\n    setLoading(true);\n    const palabrasNuevas = [];\n    \n    for (let i = 0; i < 10; i++) {\n      // Aquí puedes cambiar las palabras manualmente o usar una API para obtener palabras aleatorias\n      const palabraAleatoria = `palabra${i + 1}`;\n      const traduccionSueco = await obtenerVocabulario(palabraAleatoria, \"es\", \"sv\"); // Traducir al sueco\n      palabrasNuevas.push({ palabraEsp: palabraAleatoria, palabraSue: traduccionSueco });\n    }\n    \n    setPalabras(palabrasNuevas);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    cargarVocabulario();\n  }, []);\n\n  return (\n    <div>\n      <h2>Vocabulario Sueco-Español</h2>\n      {loading ? (\n        <p>Cargando...</p>\n      ) : (\n        palabras.map((item, index) => (\n          <Tarjeta\n            key={index}\n            palabraEsp={item.palabraEsp}\n            palabraSue={item.palabraSue}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,kBAAkB,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,UAAU,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC;;EAEtD;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMG,cAAc,GAAG,EAAE;IAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B;MACA,MAAMC,gBAAgB,GAAG,UAAUD,CAAC,GAAG,CAAC,EAAE;MAC1C,MAAME,eAAe,GAAG,MAAMd,kBAAkB,CAACa,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;MAChFF,cAAc,CAACI,IAAI,CAAC;QAAEC,UAAU,EAAEH,gBAAgB;QAAEI,UAAU,EAAEH;MAAgB,CAAC,CAAC;IACpF;IAEAR,WAAW,CAACK,cAAc,CAAC;IAC3BH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdY,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCf,OAAO,gBACNL,OAAA;MAAAgB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAElBjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBvB,OAAA,CAACH,OAAO;MAENiB,UAAU,EAAEQ,IAAI,CAACR,UAAW;MAC5BC,UAAU,EAAEO,IAAI,CAACP;IAAW,GAFvBQ,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA1CQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}