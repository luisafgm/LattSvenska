{"ast":null,"code":"var _jsxFileName = \"/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js\",\n  _s = $RefreshSig$();\n// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Servicio para obtener datos\nimport \"./vocabulario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocabulario() {\n  _s();\n  const [palabras, setPalabras] = useState([]);\n  const [categoria, setCategoria] = useState(\"verbos\"); // Por defecto, muestra verbos\n  const [palabrasActivadas, setPalabrasActivadas] = useState([]);\n  const COLUMNAS = 4; // Número de columnas por fila\n\n  // Cargar palabras según la categoría seleccionada\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras(categoria);\n      setPalabras(nuevasPalabras);\n    };\n    cargarPalabras();\n  }, [categoria]);\n\n  // Función para activar/desactivar el color de la tarjeta al hacer clic\n  const toggleTarjeta = index => {\n    setPalabrasActivadas(prevActivadas => {\n      if (prevActivadas.includes(index)) {\n        return prevActivadas.filter(i => i !== index); // Desactivar\n      } else {\n        return [...prevActivadas, index]; // Activar\n      }\n    });\n  };\n\n  // Dividir las palabras en filas, como en tu código anterior\n  const dividirEnFilas = (data, columnasPorFila) => {\n    const filas = [];\n    for (let i = 0; i < data.length; i += columnasPorFila) {\n      filas.push(data.slice(i, i + columnasPorFila));\n    }\n    return filas;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulario-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"categoria-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategoria(\"verbos\"),\n        children: \"Verbos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategoria(\"adjetivos\"),\n        children: \"Adjetivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCategoria(\"palabrasImportantes\"),\n        children: \"Palabras Importantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tarjetas-container\",\n      children: dividirEnFilas(palabras, COLUMNAS).map((fila, indexFila) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fila\",\n        children: fila.map((item, indexPalabra) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tarjeta ${palabrasActivadas.includes(indexPalabra) ? \"activada\" : \"\"}`,\n          onClick: () => toggleTarjeta(indexPalabra) // Cambiar color al hacer clic\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.palabraSue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.palabraEsp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, indexPalabra, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, indexFila, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocabulario, \"Mrf1wsTkHMHU0cNhH2zbeRiagTA=\");\n_c = Vocabulario;\nexport default Vocabulario;\nvar _c;\n$RefreshReg$(_c, \"Vocabulario\");","map":{"version":3,"names":["React","useState","useEffect","Tarjeta","obtenerPalabras","jsxDEV","_jsxDEV","Vocabulario","_s","palabras","setPalabras","categoria","setCategoria","palabrasActivadas","setPalabrasActivadas","COLUMNAS","cargarPalabras","nuevasPalabras","toggleTarjeta","index","prevActivadas","includes","filter","i","dividirEnFilas","data","columnasPorFila","filas","length","push","slice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","fila","indexFila","item","indexPalabra","palabraSue","palabraEsp","_c","$RefreshReg$"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Servicio para obtener datos\nimport \"./vocabulario.css\";\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState([]);\n  const [categoria, setCategoria] = useState(\"verbos\"); // Por defecto, muestra verbos\n  const [palabrasActivadas, setPalabrasActivadas] = useState([]);\n\n  const COLUMNAS = 4; // Número de columnas por fila\n\n  // Cargar palabras según la categoría seleccionada\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras(categoria);\n      setPalabras(nuevasPalabras);\n    };\n    cargarPalabras();\n  }, [categoria]);\n\n  // Función para activar/desactivar el color de la tarjeta al hacer clic\n  const toggleTarjeta = (index) => {\n    setPalabrasActivadas((prevActivadas) => {\n      if (prevActivadas.includes(index)) {\n        return prevActivadas.filter((i) => i !== index); // Desactivar\n      } else {\n        return [...prevActivadas, index]; // Activar\n      }\n    });\n  };\n\n  // Dividir las palabras en filas, como en tu código anterior\n  const dividirEnFilas = (data, columnasPorFila) => {\n    const filas = [];\n    for (let i = 0; i < data.length; i += columnasPorFila) {\n      filas.push(data.slice(i, i + columnasPorFila));\n    }\n    return filas;\n  };\n\n  return (\n    <div className=\"vocabulario-container\">\n      <nav className=\"categoria-nav\">\n        <button onClick={() => setCategoria(\"verbos\")}>Verbos</button>\n        <button onClick={() => setCategoria(\"adjetivos\")}>Adjetivos</button>\n        <button onClick={() => setCategoria(\"palabrasImportantes\")}>\n          Palabras Importantes\n        </button>\n      </nav>\n\n      <div className=\"tarjetas-container\">\n        {dividirEnFilas(palabras, COLUMNAS).map((fila, indexFila) => (\n          <div className=\"fila\" key={indexFila}>\n            {fila.map((item, indexPalabra) => (\n              <div\n                key={indexPalabra}\n                className={`tarjeta ${palabrasActivadas.includes(indexPalabra) ? \"activada\" : \"\"}`}\n                onClick={() => toggleTarjeta(indexPalabra)} // Cambiar color al hacer clic\n              >\n                <h4>{item.palabraSue}</h4>\n                <p>{item.palabraEsp}</p>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}