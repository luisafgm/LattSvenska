{"ast":null,"code":"// src/components/Vocabulario.js\nimport React,{useState,useEffect}from\"react\";import Tarjeta from\"./Tarjeta\";import obtenerPalabras from\"../services/vocabularioService\";// Servicio para obtener datos\nimport\"./vocabulario.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Vocabulario(){const[palabras,setPalabras]=useState([]);const[categoria,setCategoria]=useState(\"verbos\");// Por defecto, muestra verbos\nconst COLUMNAS=2;// Número de columnas por fila (ajustar según el diseño)\n// Cargar palabras según la categoría seleccionada\nuseEffect(()=>{const cargarPalabras=async()=>{const nuevasPalabras=await obtenerPalabras(categoria);setPalabras(nuevasPalabras);};cargarPalabras();},[categoria]);// Dividir las palabras en filas\nconst dividirEnFilas=(data,columnasPorFila)=>{const filas=[];for(let i=0;i<data.length;i+=columnasPorFila){filas.push(data.slice(i,i+columnasPorFila));}return filas;};return/*#__PURE__*/_jsxs(\"div\",{className:\"vocabulario-container\",children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"categoria-nav\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCategoria(\"verbos\"),children:\"Verbos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCategoria(\"adjetivos\"),children:\"Adjetivos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCategoria(\"palabrasImportantes\"),children:\"Palabras Importantes\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tarjetas-container\",children:dividirEnFilas(palabras,COLUMNAS).map((fila,indexFila)=>/*#__PURE__*/_jsx(\"div\",{className:\"fila\",children:fila.map((item,indexPalabra)=>/*#__PURE__*/_jsxs(\"div\",{className:\"tarjeta\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.palabraSue}),/*#__PURE__*/_jsx(\"p\",{children:item.palabraEsp})]},indexPalabra))},indexFila))})]});}export default Vocabulario;","map":{"version":3,"names":["React","useState","useEffect","Tarjeta","obtenerPalabras","jsx","_jsx","jsxs","_jsxs","Vocabulario","palabras","setPalabras","categoria","setCategoria","COLUMNAS","cargarPalabras","nuevasPalabras","dividirEnFilas","data","columnasPorFila","filas","i","length","push","slice","className","children","onClick","map","fila","indexFila","item","indexPalabra","palabraSue","palabraEsp"],"sources":["/Users/Luisa/src/github.com/luisafgm/estudio-sueco/src/components/Vocabulario.js"],"sourcesContent":["// src/components/Vocabulario.js\nimport React, { useState, useEffect } from \"react\";\nimport Tarjeta from \"./Tarjeta\";\nimport obtenerPalabras from \"../services/vocabularioService\"; // Servicio para obtener datos\nimport \"./vocabulario.css\";\n\nfunction Vocabulario() {\n  const [palabras, setPalabras] = useState([]);\n  const [categoria, setCategoria] = useState(\"verbos\"); // Por defecto, muestra verbos\n\n  const COLUMNAS = 2; // Número de columnas por fila (ajustar según el diseño)\n\n  // Cargar palabras según la categoría seleccionada\n  useEffect(() => {\n    const cargarPalabras = async () => {\n      const nuevasPalabras = await obtenerPalabras(categoria);\n      setPalabras(nuevasPalabras);\n    };\n    cargarPalabras();\n  }, [categoria]);\n\n  // Dividir las palabras en filas\n  const dividirEnFilas = (data, columnasPorFila) => {\n    const filas = [];\n    for (let i = 0; i < data.length; i += columnasPorFila) {\n      filas.push(data.slice(i, i + columnasPorFila));\n    }\n    return filas;\n  };\n\n  return (\n    <div className=\"vocabulario-container\">\n      <nav className=\"categoria-nav\">\n        <button onClick={() => setCategoria(\"verbos\")}>Verbos</button>\n        <button onClick={() => setCategoria(\"adjetivos\")}>Adjetivos</button>\n        <button onClick={() => setCategoria(\"palabrasImportantes\")}>\n          Palabras Importantes\n        </button>\n      </nav>\n\n      <div className=\"tarjetas-container\">\n        {/* Renderizar todas las palabras sin límite */}\n        {dividirEnFilas(palabras, COLUMNAS).map((fila, indexFila) => (\n          <div className=\"fila\" key={indexFila}>\n            {fila.map((item, indexPalabra) => (\n              <div key={indexPalabra} className=\"tarjeta\">\n                <h4>{item.palabraSue}</h4>\n                <p>{item.palabraEsp}</p>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Vocabulario;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,eAAe,KAAM,gCAAgC,CAAE;AAC9D,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,QAAQ,CAAC,CAAE;AAEtD,KAAM,CAAAa,QAAQ,CAAG,CAAC,CAAE;AAEpB;AACAZ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAZ,eAAe,CAACQ,SAAS,CAAC,CACvDD,WAAW,CAACK,cAAc,CAAC,CAC7B,CAAC,CACDD,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACH,SAAS,CAAC,CAAC,CAEf;AACA,KAAM,CAAAK,cAAc,CAAGA,CAACC,IAAI,CAAEC,eAAe,GAAK,CAChD,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,IAAI,CAACI,MAAM,CAAED,CAAC,EAAIF,eAAe,CAAE,CACrDC,KAAK,CAACG,IAAI,CAACL,IAAI,CAACM,KAAK,CAACH,CAAC,CAAEA,CAAC,CAAGF,eAAe,CAAC,CAAC,CAChD,CACA,MAAO,CAAAC,KAAK,CACd,CAAC,CAED,mBACEZ,KAAA,QAAKiB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpClB,KAAA,QAAKiB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpB,IAAA,WAAQqB,OAAO,CAAEA,CAAA,GAAMd,YAAY,CAAC,QAAQ,CAAE,CAAAa,QAAA,CAAC,QAAM,CAAQ,CAAC,cAC9DpB,IAAA,WAAQqB,OAAO,CAAEA,CAAA,GAAMd,YAAY,CAAC,WAAW,CAAE,CAAAa,QAAA,CAAC,WAAS,CAAQ,CAAC,cACpEpB,IAAA,WAAQqB,OAAO,CAAEA,CAAA,GAAMd,YAAY,CAAC,qBAAqB,CAAE,CAAAa,QAAA,CAAC,sBAE5D,CAAQ,CAAC,EACN,CAAC,cAENpB,IAAA,QAAKmB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAEhCT,cAAc,CAACP,QAAQ,CAAEI,QAAQ,CAAC,CAACc,GAAG,CAAC,CAACC,IAAI,CAAEC,SAAS,gBACtDxB,IAAA,QAAKmB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAClBG,IAAI,CAACD,GAAG,CAAC,CAACG,IAAI,CAAEC,YAAY,gBAC3BxB,KAAA,QAAwBiB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACzCpB,IAAA,OAAAoB,QAAA,CAAKK,IAAI,CAACE,UAAU,CAAK,CAAC,cAC1B3B,IAAA,MAAAoB,QAAA,CAAIK,IAAI,CAACG,UAAU,CAAI,CAAC,GAFhBF,YAGL,CACN,CAAC,EANuBF,SAOtB,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAArB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}